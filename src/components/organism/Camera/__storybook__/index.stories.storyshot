// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Organism/Camera Default 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "black",
        "flex": 1,
        "flexDirection": "column",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "flex-end",
        }
      }
    >
      <RNCamera
        androidCameraPermissionOptions={
          Object {
            "buttonNegative": "Cancel",
            "buttonPositive": "Ok",
            "message": "We need your permission to use your camera",
            "title": "Permission to use camera",
          }
        }
        androidRecordAudioPermissionOptions={
          Object {
            "buttonNegative": "Cancel",
            "buttonPositive": "Ok",
            "message": "We need your permission to use your audio",
            "title": "Permission to use audio recording",
          }
        }
        autoFocus={1}
        barCodeTypes={Array []}
        cameraId={null}
        captureAudio={true}
        exposure={-1}
        faceDetectionClassifications={0}
        faceDetectionLandmarks={0}
        faceDetectionMode={1}
        flashMode={1}
        focusDepth={0}
        keepAudioSession={false}
        maxZoom={0}
        mirrorVideo={false}
        notAuthorizedView={
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 16,
                  "textAlign": "center",
                }
              }
            >
              Camera not authorized
            </Text>
          </View>
        }
        onAudioConnected={[Function]}
        onAudioInterrupted={[Function]}
        onBarCodeRead={[Function]}
        onCameraReady={[Function]}
        onFacesDetected={[Function]}
        onGoogleVisionBarcodesDetected={[Function]}
        onMountError={[Function]}
        onPictureSaved={[Function]}
        onSubjectAreaChanged={[Function]}
        onTextRecognized={[Function]}
        pendingAuthorizationView={
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <ActivityIndicator
              animating={true}
              color="#999999"
              hidesWhenStopped={true}
              size="small"
            />
          </View>
        }
        permissionDialogMessage=""
        permissionDialogTitle=""
        pictureSize="None"
        playSoundOnCapture={false}
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
        type={1}
        useCamera2Api={false}
        videoStabilizationMode={0}
        zoom={0}
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "lightgreen",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Text>
          Waiting
        </Text>
      </View>
    </View>
  </View>
</View>
`;
