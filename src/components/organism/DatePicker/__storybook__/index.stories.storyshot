// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Organism/DatePicker Default 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#EEEEEE",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-evenly",
      "padding": 40,
    }
  }
>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={true}
  >
    <View
      accessible={true}
      clickable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 1334,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Object {
            "backgroundColor": "#EEEEEE",
            "borderRadius": 24,
          }
        }
      >
        <View
          style={
            Object {
              "paddingHorizontal": 12,
              "paddingVertical": 16,
            }
          }
        >
          <View
            style={
              Object {
                "paddingHorizontal": 12,
                "paddingVertical": 12,
              }
            }
          >
            <View>
              <RCTDatePicker
                date={1019805083000}
                maximumDate={1587885083000}
                mode="date"
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "height": 216,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                accessibilityLabel="Confirm"
                accessible={true}
                clickable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "alignSelf": "stretch",
                    "backgroundColor": "#EEEEEE",
                    "borderRadius": 24,
                    "opacity": 1,
                    "paddingHorizontal": 12,
                    "paddingVertical": 6,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#ff9345",
                      "fontSize": 16,
                      "fontWeight": "bold",
                    }
                  }
                >
                  Confirm
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;

exports[`Storyshots Organism/DatePicker With Cancel Button 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#EEEEEE",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-evenly",
      "padding": 40,
    }
  }
>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    onRequestClose={[Function]}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    transparent={true}
    visible={true}
  >
    <View
      accessible={true}
      clickable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
    <View
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      pointerEvents="box-none"
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
          "margin": 37.5,
          "transform": Array [
            Object {
              "translateY": 1334,
            },
          ],
        }
      }
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
    >
      <View
        style={
          Object {
            "backgroundColor": "#EEEEEE",
            "borderRadius": 24,
          }
        }
      >
        <View
          style={
            Object {
              "paddingHorizontal": 12,
              "paddingVertical": 16,
            }
          }
        >
          <View
            style={
              Object {
                "paddingHorizontal": 12,
                "paddingVertical": 12,
              }
            }
          >
            <View>
              <RCTDatePicker
                date={1019805083000}
                maximumDate={1587885083000}
                mode="date"
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "height": 216,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                accessibilityLabel="Cancel"
                accessible={true}
                clickable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "alignSelf": "stretch",
                    "backgroundColor": "#EEEEEE",
                    "borderRadius": 24,
                    "opacity": 1,
                    "paddingHorizontal": 12,
                    "paddingVertical": 6,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#008148",
                      "fontSize": 16,
                      "fontWeight": "bold",
                    }
                  }
                >
                  Cancel
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "width": 8,
                }
              }
            />
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                accessibilityLabel="Confirm"
                accessible={true}
                clickable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "alignSelf": "stretch",
                    "backgroundColor": "#EEEEEE",
                    "borderRadius": 24,
                    "opacity": 1,
                    "paddingHorizontal": 12,
                    "paddingVertical": 6,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#ff9345",
                      "fontSize": 16,
                      "fontWeight": "bold",
                    }
                  }
                >
                  Confirm
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;
